name: Release

on:
  push:
    branches:
      - master
      - develop
      - 'release/*'

jobs:
  build:
    name: Build
    runs-on: windows-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - name: Check PR labels action step
        id: labelcheck
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["create-release"]'
      - name: Continue only if the create-release label exists, fail otherwise.
        if: steps.labelcheck.outputs.result != 'true'
        run: exit 1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Avoid shallow clone so nbgv can do its work.
      - name: Setup Nerdbank.GitVersioning
        id: nbgv
        uses: dotnet/nbgv@v0.4.0
      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.2
        continue-on-error: true # github-tagger will crash if the tag already exists. Not a problem, continue anyway.
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.nbgv.outputs.SimpleVersion }}
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          failOnError: true
          configuration: "configs/configuration.json"
          toTag: v${{ steps.nbgv.outputs.SimpleVersion }}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x # SDK Version to use. We start by installing 3.1.* for msbuild to use when building DotnetFullOnly. This is replaced later, by 5.0.*
      - name: Setup Nuget
        uses: nuget/setup-nuget@v1.0.6
      - name: Setup NuGet Source
        run: nuget sources add -Name "Placeholder" -Source "https://nuget.pkg.github.com/data-automation-framework/index.json" -UserName "bjorhn" -Password "${{ secrets.GITHUB_TOKEN }}"
        shell: cmd
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Restore nuget packages with MSBuild
        run: msbuild Daf.Core.Ssis_DotnetFullOnly.sln -t:restore
      - name: Build with MSBuild
        run: msbuild Daf.Core.Ssis_DotnetFullOnly.sln /property:Configuration=Release
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x # SDK Version to use.
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build .NET Core projects
        run: dotnet build Daf.Core.Ssis_DotnetCoreOnly.sln --configuration Release
      - name: Create the nuget package
        run: dotnet pack Daf.Core.Ssis/Daf.Core.Ssis.csproj --configuration Release --output Daf.Core.Ssis/bin/Release/Publish
      - name: Publish to GitHub
        run: dotnet nuget push Daf.Core.Ssis/bin/Release/Publish/**/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.nbgv.outputs.SimpleVersion }}
          tag_name: v${{ steps.nbgv.outputs.SimpleVersion }}
          body: ${{steps.build_changelog.outputs.changelog}}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Move latest MajorMinor version tag
        uses: EndBug/latest-tag@v1.4.0
        with:
          tag-name: v${{ steps.nbgv.outputs.MajorMinorVersion }}
      - name: Move latest Major version tag
        uses: EndBug/latest-tag@v1.4.0
        with:
          tag-name: v${{ steps.nbgv.outputs.VersionMajor }}
      - name: Repository dispatch
        uses: peter-evans/repository-dispatch@v1.1.3
        with:
          token: ${{ secrets.REPO_PUBLIC }}
          repository: data-automation-framework/docs
          event-type: deploy-pages
